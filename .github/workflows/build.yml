name: Build docker image for specific project and push it to ECR

on:
  push:
    branches: [ main ]

env:
  ECR_REPOSITORY: "demo-repository"
  EB_ENVIRONMENT: "MinimalApi-env"
  EB_APPLICATION: "MinimalApi"
  S3_BUCKET: "elasticbeanstalk-eu-central-1-785428641476"

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Move to project dir
      run: cd SimpleMinimalApi
    
    - name: Build and push the Docker image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        docker build -t $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:${{ github.run_id }} .
        echo "Pushing image to ECR..." $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:${{ github.run_id }}
        docker push $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:${{ github.run_id }}
        echo ::set-output name=image::$ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG
        
    - name: Update Dockerrun.aws.json
      run: |
        chmod +x update_dockerrun.sh
        ./update_dockerrun.sh ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.run_id }}
        
    - name: Zip Dockerrun.aws.json and upload to S3 bucket
      run: |
        zip deployment.zip Dockerrun.aws.json
        aws s3 cp deployment.zip s3://${{ env.S3_BUCKET }}

    - name: Deploy to Elastic Beanstalk
      run: |
        echo "Creating new application version "${{ github.run_id }}" for "${{ env.EB_APPLICATION }}
        aws elasticbeanstalk create-application-version --application-name ${{ env.EB_APPLICATION }} --version-label ${{ github.run_id }} --source-bundle S3Bucket=${{ env.S3_BUCKET }},S3Key="deployment.zip"
        echo "Updating beanstalk env..."
        aws elasticbeanstalk update-environment --application-name ${{ env.EB_APPLICATION }} --environment-name ${{ env.EB_ENVIRONMENT }} --version-label ${{ github.run_id }}