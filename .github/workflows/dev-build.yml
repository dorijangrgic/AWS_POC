name: DEV - Build, Release, Migrations

on:
  push:
    branches:
      - dev

env:
  run_id: api-${{ github.run_id }}

jobs:
  
  build:
    name: Build
    runs-on: ubuntu-latest
    environment: Dev

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update appsettings.json variables
        uses: microsoft/variable-substitution@v1
        with:
          files: 'SimpleMinimalApi/appsettings.json'
        env:
          ConnectionStrings.prodia-db: ${{ secrets.CONNECTION_STRING }}
        
      - name: Print appsettings.json
        run: |
          cd SimpleMinimalApi
          cat appsettings.json

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push the Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $ECR_REGISTRY/${{ vars.ECR_REPOSITORY }}:${{ env.run_id }} .
          docker push $ECR_REGISTRY/${{ vars.ECR_REPOSITORY }}:${{ env.run_id }}

      - name: Update docker-compose.yml variables
        uses: microsoft/variable-substitution@v1
        with:
          files: 'utility/docker-compose.yml'
        env:
          services.web-api.image: ${{ steps.login-ecr.outputs.registry }}/${{ vars.ECR_REPOSITORY }}:${{ env.run_id }}

      - name: Zip docker-compose.yml and push it to the S3 bucket
        run: |
          cd utility
          cat docker-compose.yml
          echo ${{ env.run_id }} > ${{ vars.LAST_RUN_ID }}
          zip -r ${{ env.run_id }}.zip docker-compose.yml
          aws s3 cp ${{ env.run_id }}.zip s3://${{ vars.S3_BUCKET }}/dev/
          aws s3 cp ${{ vars.LAST_RUN_ID }} s3://${{ vars.S3_BUCKET }}/dev/
          
  deploy:
    name: Deploy to Dev
    runs-on: ubuntu-latest
    environment: Dev
    needs: build
    
    steps:

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to Elastic Beanstalk
        run: |
          aws elasticbeanstalk create-application-version --application-name ${{ vars.EB_APPLICATION }} --version-label ${{ env.run_id }} --source-bundle S3Bucket=${{ vars.S3_BUCKET }},S3Key="dev/${{ env.run_id }}.zip"
          aws elasticbeanstalk update-environment --application-name ${{ vars.EB_APPLICATION }} --environment-name ${{ vars.EB_ENVIRONMENT }} --version-label ${{ env.run_id }}

      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Run migrations
        run: dotnet ef update
        env:
          prodia-db: ${{ secrets.CONNECTION_STRING }}